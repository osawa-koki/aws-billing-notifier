name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop

env:
  project-name: ${{ secrets.PROJECT_NAME }}
  server-directory: ./server
  node-version: 18

jobs:
  lambda-check:
    runs-on: ubuntu-latest
    steps:
      # - uses: actions/checkout@v3
      # - uses: actions/setup-node@v3
      #   with:
      #     node-version: ${{ env.node-version }}
      # - name: Install dependencies
      #   run: yarn install
      #   working-directory: ${{ env.server-directory }}/src
      # - name: Lint check
      #   run: yarn lint
      #   working-directory: ${{ env.server-directory }}/src
      # - name: Prettier check
      #   run: yarn prettier:check
      #   working-directory: ${{ env.server-directory }}/src
      # - name: Test
      #   run: yarn test
      #   working-directory: ${{ env.server-directory }}/src
  lambda-deploy:
    runs-on: ubuntu-latest
    needs: lambda-check
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: aws-actions/setup-sam@v2
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Create dotenv file
        run: echo $'${{ secrets.LAMBDA_DOTENV }}' > ./src/.env
        working-directory: ${{ env.server-directory }}
      - run: sam build --use-container
        working-directory: ${{ env.server-directory }}
      - name: Deploy Lambda
        run: sam deploy --stack-name ${{ env.project-name }}
        working-directory: ${{ env.server-directory }}
